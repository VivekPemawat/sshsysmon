{
  "name": "SshSysMon",
  "tagline": "SSH System Monitoring -- Server monitoring for lazy people.",
  "body": "# Unix System Monitoring Over SSH\r\n\r\nSshMon is a system/server monitoring tool that executes all of its operations over SSH without the\r\nneed for installing agents across machines.\r\n\r\nIts goal is to provide simple self-hosted monitoring and alerting for small numbers and lightweight\r\nservers without the traditional overhead of a monitoring system.\r\n\r\nIt monitors things in /proc and with simple command executions to monitor system vitals such as: memory, cpu load, drive space, swap, etc.\r\n\r\n\r\n\r\n\r\n## Setup\r\n\r\n### Installation\r\n\r\nRequires python 2.x\r\n\r\nMake sure the dependencies are installed:\r\n\r\n    pip install -r requirements.txt\r\n\r\nIt is assumed that you already have a private key created and added to the `authorized_hosts` file on\r\nall remote servers you are interested in monitoring.  While password authentication is supported, this\r\nis the easiest way to guarantee continued authentication to other hosts.\r\n\r\n### Setting up a ssh key pair\r\n\r\nOn debian-based linux systems, setting up a key-pair to use with SSH is easy.  I would recommend\r\nyou make a new linux user to only do monitoring on each machine, but it isn't required.\r\n\r\nFirst, create a new SSH key if you don't already have one. Follow the prompts, but leave the\r\npassword blank\r\n\r\n    ssh-keygen\r\n\r\nNow, install it on a user on another machine that you want to monitor\r\n\r\n    ssh-copy-id username@hostname\r\n\r\nNow you're all set up to use sshsysmon over SSH to the other host\r\n\r\n\r\n### Running\r\n\r\nThe service has two commands, `summary` and `check`.\r\n\r\n#### Summary\r\n\r\n`summary` will print out a human-readable summary of all servers specified in the config. It is a\r\ngreat way to validate your config.\r\n\r\nIt can be executed with:\r\n\r\n    ./sshmon.py summary <myconfig.yml>\r\n\r\n#### Check\r\n\r\n`check` is meant to be executed as part of a scheduled job, and will notify all channels in the config\r\nif a condition is unmet.\r\n\r\nIt can be excuted with:\r\n\r\n    ./sshmon.py check <myconfig.yml>\r\n\r\n\r\n### Running Scheduled Job\r\n\r\nThe service is (currently) meant to be used in a cron job.\r\n\r\nEdit your cron jobs with\r\n\r\n    crontab -e\r\n\r\nAdd an entry that runs the script every few hours: (or minutes, whatever you like)\r\n\r\n    0 */4 * * * /path/to/sshmon.py check /path/to/config.yml\r\n\r\n\r\n\r\n\r\n### Configuration\r\n\r\nConfiguration is written in yaml and is a set of servers, with a list of alerts, notification channels\r\nand connection details.\r\n\r\nSee the [Examples](/examples) folder for more sample configs.\r\n\r\nAn example simple configuration might look something like this:\r\n\r\n```\r\nservers:\r\n  \"Name of server\":\r\n    driver: ssh\r\n    config:\r\n      host: myhostname.com\r\n      username: myuser\r\n  channels: # Notification targets\r\n    - type: email\r\n      config:\r\n        toAddr: myemail@gmail.com\r\n        subject: \"Something went wrong on {server}\"\r\n  alerts: # All alerts and inspectors\r\n    - type: memory\r\n      alarms:\r\n        \"Low Swap\": \"swap_free < 50000\"\r\n        \"Low Memory\": \"mem_free < 50000\"\r\n    - type: disk\r\n      alarms:\r\n        \"Low Disk Space\": \"disk_free < 500000\"\r\n  summary: # Optional, if not provided, alerts will be used to auto-configure summary\r\n    - type: memory\r\n    - type: diskspace\r\n```\r\n\r\nYou can often use YAML's inheritance to simplify your config for more than 1 server.\r\n\r\n\r\nAll servers are iterated throw, and queries for given inspector types. The resulting metrics are compared to\r\nthe alerts, and if any of them are unmet, a notification it sent to all configured channels.\r\n\r\nConfiguration is built on three concepts: Drivers, Inspectors, and Channels.\r\n\r\n#### Drivers\r\n\r\nDrivers are classes that define how to read information from a server.  By default, there are two drivers:\r\n\r\n##### Local\r\n\r\nThe local driver is only for your local machine. There is no config for this driver.\r\n\r\n##### SSH\r\n\r\nThe SSH driver is for reaching out to remote machines.  There are several config paramters for this driver:\r\n\r\n  * host - The hostname of the machine (IP or Domain)\r\n  * username - The username to connect with\r\n  * password - (Not recommended, use key instead) The ssh user's password\r\n  * key - The path to the private key to use to connect (Default: ~/.ssh/id_rsa)\r\n  * port - The port to connect to the machine on (Default: 22)\r\n  * path - The path which proc is located (Default: /proc)\r\n\r\n#### Channels\r\n\r\nChannels define what can happen if an alert fires.  There a few built-in.\r\n\r\nThere are a few variables passed in that can be used to format part of the commands:\r\n\r\n  * server - The server that the alert triggered on\r\n  * alert - The alert that triggered\r\n  * metric - The metric that triggered the alert\r\n\r\n##### command\r\n\r\nExecutes a shell command on the machine in which the script is running.\r\n\r\nArguments:\r\n\r\n  * command - The shell command to execute\r\n\r\n##### email\r\n\r\nSends an email via a SMTP server.\r\n\r\nBy default, it assumes a local SMTP server is setup.  For more complex configs, such as how to use\r\ngmail, see the examples.\r\n\r\nArguments:\r\n\r\n  * toAddr - The address to send the email to\r\n  * fromAddr - The address the email should come from (default: username@hostname)\r\n  * host - The SMTP host (default: localhost)\r\n  * port - The SMTP port (default: 25)\r\n  * subject - Subject line of email (has reasonable default)\r\n  * username - Username to authenticate with smtp server (default: none)\r\n  * password - Password to authenticate with smtp server (default: none)\r\n  * tls - Should use tls (default: false)\r\n  * ssl - Should use ssl (default: false)\r\n\r\n#### Inspectors (Alert Types)\r\n\r\nInspects are parsers that know how to read data from a driver and make sense of it.\r\n\r\n##### Memory (memory)\r\n\r\nThe memory driver returns metrics about the systems memory (in KB):\r\n\r\nMetrics: mem_total, mem_free, cached, swap_total, swap_free\r\n\r\n##### Disk Space (disk)\r\n\r\nThe Disk driver returns status of the disk space (in GB)\r\n\r\nArguments:\r\n\r\n  * device - The name of the device (Optional, eg /dev/sda)\r\n  * mount - The mount point of the device (default: /)\r\n\r\nMetrics: size, used, available, percent_full\r\n\r\n##### Load Average (loadavg)\r\n\r\nThe load average inspector returns the system's current 1/5/15 minute [load average](http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages).\r\n\r\nMetrics: load_1m, load_5m, load_15m\r\n\r\n##### Process Monitor (process)\r\n\r\nThis inspector will allow you monitor a process on the given machine.\r\n\r\nIt takes in one **required** config `name`. This will use [wildcard matching](https://docs.python.org/2/library/fnmatch.html) with `*` and `?`.\r\n\r\nMetrics: user, pid, cpu, mem, tty\r\n\r\n---\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 Chris LaPointe\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}